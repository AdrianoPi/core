#!/bin/sh

cd @TOP_BUILDDIR@/docs || exit

coverxygen="python3 -m coverxygen --xml-dir xml/ --src-dir @TOP_SRCDIR@/ --kind enum,enumvalue,typedef,variable,function,struct,union,define,file --exclude README.md"

# Run the doc coverage pipeline
REPORT=$($coverxygen --format summary --output - | tee doc-coverage.resume)
covpercent=$(cat doc-coverage.resume | grep Total | sed 's/.*://' | sed 's/%.*//' | xargs)
$coverxygen --output doc-coverage.info
genhtml --no-function-coverage --no-branch-coverage -t "ROOT-Sim @VERSION@ Documentation Coverage" @TOP_BUILDDIR@/docs/doc-coverage.info -o @TOP_BUILDDIR@/docs/coverage/

# Post process and store the results
acceptable=$(echo $covpercent'>'50 | bc -l) # 60% is considered an acceptable threshold for now
color="red"
icon=":exclamation:"
if [ "$acceptable" -eq "1" ] ; then
	color="green"
	icon=":+1"
fi

# Setup the json file to provide data to shield.io
cd @TOP_BUILDDIR@/docs || exit
cat <<EOT > shields.json
{
  "schemaVersion": 1,
  "label": "doc coverage",
  "message": "$covpercent%",
  "color": "$color"
}
EOT

# Prepare the summary
IFS='' read -r -d '' COMMENT <<EOT
Documentation coverage is **$covpercent%** $icon
\`\`\`
$REPORT
\`\`\`
EOT

# Show the summary
echo "$COMMENT"

# Escape json stuff
COMMENT=$(jq -aRs . <<< "$COMMENT")

# TODO: Upload as a comment on github